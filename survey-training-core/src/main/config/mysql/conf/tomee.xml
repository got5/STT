<?xml version="1.0" encoding="UTF-8"?>
<!--

    Licensed to the Apache Software Foundation (ASF) under one or more
    contributor license agreements.  See the NOTICE file distributed with
    this work for additional information regarding copyright ownership.
    The ASF licenses this file to You under the Apache License, Version 2.0
    (the "License"); you may not use this file except in compliance with
    the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

-->

<openejb>



<Container id="My Stateful Container" type="STATEFUL">
  #  The passivator is responsible for writing beans to disk
  #  at passivation time. Different passivators can be used
  #  by setting this property to the fully qualified class name
  #  of the PassivationStrategy implementation. The passivator
  #  is not responsible for invoking any callbacks or other
  #  processing, its only responsibly is to write the bean state
  #  to disk.
  #
  #  Known implementations:
  #     org.apache.openejb.core.stateful.RAFPassivater
  #     org.apache.openejb.core.stateful.SimplePassivater

  Passivator   org.apache.openejb.core.stateful.SimplePassivater

  #  Specifies the time to wait between invocations. This
  #  value is measured in minutes. A value of 5 would
  #  result in a time-out of 5 minutes between invocations.
  #  A value of zero would mean no timeout.

  TimeOut  60

  #  Specifies the size of the bean pools for this
  #  stateful SessionBean container.

  PoolSize  1000

  #  Property name that specifies the number of instances
  #  to passivate at one time when doing bulk passivation.
  #  Must be less than the PoolSize.

  BulkPassivate  100

</Container>


<Container id="My Stateless Container" type="STATELESS">
  #  Specifies the time to wait between invocations. This
  #  value is measured in milliseconds.  A value of 5 would
  #  result in a time-out of 5 milliseconds between invocations.
  #  A value of zero would mean no timeout.

  TimeOut  0

  #  Specifies the size of the bean pools for this
  #  stateless SessionBean container.

  PoolSize  20

  #  StrictPooling tells the container what to do when the pool
  #  reaches it's maximum size and there are incoming requests
  #  that need instances.
  #
  #  With strict pooling, requests will have to wait for instances
  #  to become available.  The pool size will never grow beyond the
  #  the set PoolSize value.
  #
  #  Without strict pooling, the container will create temporary
  #  instances to meet demand.  The instances will last for just one
  #  method invocation and then are removed.

  StrictPooling  false

</Container>

<!-- Container id="My MDB Container " type="MESSAGE">

  #  The resource adapter delivers messages to the container

  ResourceAdapter My JMS Resource Adapter

  # Specifies the message listener interface handled by this container

  MessageListenerInterface javax.jms.MessageListener

  # Specifies the activation spec class

  ActivationSpecClass org.apache.activemq.ra.ActiveMQActivationSpec

  # Specifies the maximum number of bean instances that are
  # allowed to exist for each MDB deployment.

  InstanceLimit 10

</Container -->

<!--  Resource id="My JMS Resource Adapter" type="ActiveMQResourceAdapter">
  # Broker configuration URI as defined by ActiveMQ
  # see http://activemq.apache.org/broker-configuration-uri.html

  BrokerXmlConfig broker:(tcp://localhost:61616)?useJmx=false

  # Broker address

  ServerUrl vm://localhost?async=true

  # DataSource for persistence messages

  DataSource jdbc/training.ActiveMQ.DB
</Resource -->

<!--  Connector id="My JMS Connection Factory" type="javax.jms.ConnectionFactory">

  ResourceAdapter My JMS Resource Adapter

  # Specifies if the connection is enrolled in global transaction
  # allowed values: xa, local or none

  TransactionSupport xa

  # Maximum number of physical connection to the ActiveMQ broker

  PoolMaxSize 10

  # Minimum number of physical connection to the ActiveMQ broker

  PoolMinSize 0

  # Maximum amount of time to wait for a connection

  ConnectionMaxWaitMilliseconds 5000

  # Maximum amount of time a connection can be idle before being reclaimed

  ConnectionMaxIdleMinutes 15

</Connector -->




<!--
# For more examples of database configuration see:
# http://openejb.apache.org/3.0/databases.html
#For details concerning the below parameters, have a look on the following URL:
#http://openejb.apache.org/example-generated-documentation.html
-->


<Resource id="jdbc/surveyDS" type="DataSource">
		JdbcDriver com.mysql.jdbc.Driver
		JdbcUrl jdbc:mysql://localhost:3306/survey_training?useUnicode=true&amp;cacheResultSetMetadata=true
		UserName root
		Password toor
		JtaManaged true
		InitialSize 3
		MaxActive 20
		TestOnBorrow true
		PoolPreparedStatements true
		MaxOpenPreparedStatements 128
	</Resource>








<!--
#
#  The <Deployments> element can be used to configure file
#  paths where OpenEJB should look for ejb jars or ear files.
#
#  See http://openejb.apache.org/deployments.html
#
#  The below entry is simply a default and can be changed or deleted
-->
<!-- Deployments dir="d:/JavaEvaluation/TapestryEjb3/docs/WEB-INF/classes" / -->

</openejb>
